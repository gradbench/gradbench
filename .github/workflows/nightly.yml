name: Nightly
on:
  schedule:
    # run daily at 1am UTC, just so nobody thinks it's yesterday or tomorrow
    - cron: "0 1 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  matrix:
    runs-on: ubuntu-22.04
    outputs:
      date: ${{ steps.matrix.outputs.date }}
      eval: ${{ steps.matrix.outputs.eval }}
      tool: ${{ steps.matrix.outputs.tool }}
    steps:
      - uses: actions/checkout@v4
      - id: matrix
        run: .github/matrix.py | tee -a "$GITHUB_OUTPUT"

  eval:
    needs: matrix
    strategy:
      matrix:
        eval: ${{ fromJSON(needs.matrix.outputs.eval) }}
    runs-on: ubuntu-22.04
    env:
      IMAGE: ghcr.io/gradbench/eval-${{ matrix.eval }}
      TAG: ${{ fromJSON(needs.matrix.outputs.date) }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/docker
      - run: ./crosseval.sh ${{ matrix.eval }}
      - run: docker tag $IMAGE $IMAGE:$TAG
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: docker push --all-tags $IMAGE
      - run: docker save --output eval-${{ matrix.eval }}.tar $IMAGE
      - uses: actions/upload-artifact@v4
        with:
          name: eval-${{ matrix.eval }}
          path: eval-${{ matrix.eval }}.tar

  tool:
    needs: matrix
    strategy:
      matrix:
        tool: ${{ fromJSON(needs.matrix.outputs.tool) }}
    runs-on: ubuntu-22.04
    env:
      IMAGE: ghcr.io/gradbench/tool-${{ matrix.tool }}
      TAG: ${{ fromJSON(needs.matrix.outputs.date) }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/space
      - uses: ./.github/actions/docker
      - run: ./crosstool.sh ${{ matrix.tool }}
      - run: docker tag $IMAGE $IMAGE:$TAG
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: docker push --all-tags $IMAGE
      - run: docker save --output tool-${{ matrix.tool }}.tar $IMAGE
      - uses: actions/upload-artifact@v4
        with:
          name: tool-${{ matrix.tool }}
          path: tool-${{ matrix.tool }}.tar

  run:
    needs:
      - matrix
      - eval
      - tool
    strategy:
      matrix:
        eval: ${{ fromJSON(needs.matrix.outputs.eval) }}
        tool: ${{ fromJSON(needs.matrix.outputs.tool) }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: eval-${{ matrix.eval }}
      - uses: actions/download-artifact@v4
        with:
          name: tool-${{ matrix.tool }}
      - run: docker load --input eval-${{ matrix.eval }}.tar
      - run: docker load --input tool-${{ matrix.tool }}.tar
      - run: |
          set -o pipefail
          ./run.py --eval './eval.sh ${{ matrix.eval }}' --tool './tool.sh ${{ matrix.tool }}' | tee log.json
      - uses: actions/upload-artifact@v4
        with:
          name: run-${{ matrix.eval }}-${{ matrix.tool }}
          path: log.json

  release:
    needs:
      - matrix
      - run
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh run download ${{ github.run_id }} --dir run --pattern 'run-*'
      - run: .github/release.py
      - env:
          DATE: ${{ fromJSON(needs.matrix.outputs.date) }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create --target "$GITHUB_SHA" "nightly-$DATE" release/*
