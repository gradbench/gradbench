name: Build
on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  check-js:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
      - name: Install npm dependencies
        run: bun install
      - name: Check Markdown tables of contents
        run: |
          bun run toc
          CHANGES=$(git status --porcelain)
          echo "$CHANGES"
          git diff
          [ -z "$CHANGES" ]
      - name: Check Prettier formatting
        run: bun run prettier --check .

  check-py:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Lint Python code
        run: uv run ruff check
      - name: Check Python formatting
        run: uv run ruff format --check

  check-rs:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Lint Rust code
        run: cargo clippy -- -Dwarnings
      - name: Test Rust code
        run: cargo test

  site:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
      - name: Install npm dependencies
        run: bun install
      - name: Lint website
        run: bun run --filter=gradbench lint
      - name: Build website
        run: bun run --filter=gradbench build
      - name: Upload website artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: packages/gradbench/dist

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: site
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    runs-on: ubuntu-24.04
    steps:
      - name: Deploy website
        id: deploy
        uses: actions/deploy-pages@v4

  cli:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build CLI
        uses: houseabsolute/actions-rust-cross@v1
        with:
          target: x86_64-unknown-linux-musl
          args: --package=gradbench --profile=release-with-debug
      - name: Upload CLI as artifact
        uses: actions/upload-artifact@v4
        with:
          name: cli
          path: target/x86_64-unknown-linux-musl/release-with-debug/gradbench

  windows:
    runs-on: windows-2022
    steps:
      - name: Configure line endings
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test Rust code
        run: cargo test

  matrix:
    needs: cli
    runs-on: ubuntu-24.04
    outputs:
      eval: ${{ steps.matrix.outputs.eval }}
      tool: ${{ steps.matrix.outputs.tool }}
      run: ${{ steps.matrix.outputs.run }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install CLI from artifact
        uses: ./.github/actions/cli
      - name: Compute job parameters
        id: matrix
        run: gradbench repo matrix | tee -a "$GITHUB_OUTPUT"

  eval:
    needs:
      - cli
      - matrix
    strategy:
      fail-fast: false
      matrix:
        eval: ${{ fromJSON(needs.matrix.outputs.eval) }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup multi-platform Docker
        uses: ./.github/actions/docker
      - name: Install CLI from artifact
        uses: ./.github/actions/cli
      - name: Build eval Docker image
        run: gradbench repo build-eval --platform linux/amd64,linux/arm64 ${{ matrix.eval }}
      - name: Serialize eval Docker image
        run: docker save --output eval-${{ matrix.eval }}.tar ghcr.io/gradbench/eval-${{ matrix.eval }}
      - name: Upload eval Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: eval-${{ matrix.eval }}
          path: eval-${{ matrix.eval }}.tar

  x86-tool:
    needs:
      - cli
      - matrix
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.matrix.outputs.tool) }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Increase disk space
        uses: ./.github/actions/space
      - name: Install CLI from artifact
        uses: ./.github/actions/cli
      - name: Build tool Docker image
        run: gradbench repo build-tool ${{ matrix.tool }}
      - name: Serialize tool Docker image
        run: docker save --output tool-${{ matrix.tool }}.tar ghcr.io/gradbench/tool-${{ matrix.tool }}
      - name: Upload tool Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: x86-tool-${{ matrix.tool }}
          path: tool-${{ matrix.tool }}.tar

  run:
    needs:
      - cli
      - matrix
      - eval
      - x86-tool
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.matrix.outputs.run) }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Increase disk space
        uses: ./.github/actions/space
      - name: Install CLI from artifact
        uses: ./.github/actions/cli
      - name: Download eval Docker image from artifact
        uses: actions/download-artifact@v4
        with:
          name: eval-${{ matrix.eval }}
      - name: Download tool Docker image from artifact
        uses: actions/download-artifact@v4
        with:
          name: x86-tool-${{ matrix.tool }}
      - name: Load eval Docker image
        run: docker load --input eval-${{ matrix.eval }}.tar
      - name: Load tool Docker image
        run: docker load --input tool-${{ matrix.tool }}.tar
      - name: Run tool on eval
        id: run
        run: |
          set +e
          gradbench exit-code ${{ matrix.outcome }}
          expected=$?
          gradbench run --eval "gradbench eval ${{ matrix.eval }}" --tool "gradbench tool ${{ matrix.tool }}" --output log.jsonl --timeout 600
          actual=$?
          set -e
          if [ $actual -ne $expected ]; then
            echo "expected exit code $expected (from outcome ${{ matrix.outcome }}) but got exit code $actual"
            exit 1
          fi
      - name: Upload log as artifact
        if: success() || steps.run.conclusion == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: run-${{ matrix.eval }}-${{ matrix.tool }}
          path: log.jsonl

  stats:
    needs:
      - cli
      - matrix
      - run
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install CLI from artifact
        uses: ./.github/actions/cli
      - name: Download all log artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh run download ${{ github.run_id }} --dir run --pattern 'run-*'
      - name: Checkout stats branch
        uses: actions/checkout@v4
        with:
          path: stats
          ref: ci/refs/heads/main
      - name: Checkout target branch
        if: github.event_name == 'pull_request'
        working-directory: stats
        run: git checkout -b "ci/$GITHUB_REF"
      - name: Delete contents of stats branch dir
        continue-on-error: true
        working-directory: stats
        run: git rm -rf .
      - name: Generate stats
        run: gradbench repo stats run -o stats --commit ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Upload stats as artifact
        uses: actions/upload-artifact@v4
        with:
          name: stats
          path: stats
      - name: Commit to stats branch
        id: commit
        working-directory: stats
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          git commit --allow-empty -m 'Stats for commit ${{ github.event.pull_request.head.sha || github.sha }}'
          echo "CI_COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - name: Push to stats branch
        continue-on-error: true
        working-directory: stats
        run: git push -f origin HEAD
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        continue-on-error: true
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            **Summary statistics were generated and pushed in commit ${{ steps.commit.outputs.CI_COMMIT_SHA }}. View them at this URL:**

            https://gradben.ch/?commit=${{ steps.commit.outputs.CI_COMMIT_SHA }}

            > [!NOTE]
            > Workflow run [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) was triggered by commit ${{ github.event.pull_request.head.sha }}, which was merged with the latest commit from branch `${{ github.event.pull_request.base.ref }}` before running, so the workflow was run on the merge commit ${{ github.sha }}.

  tool:
    needs:
      - cli
      - matrix
      - run # Not strictly necessary, but GitHub Actions has concurrency limits.
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(needs.matrix.outputs.tool) }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Increase disk space
        uses: ./.github/actions/space
      - name: Setup multi-platform Docker
        uses: ./.github/actions/docker
      - name: Install CLI from artifact
        uses: ./.github/actions/cli
      - name: Build tool Docker image
        if: ${{ matrix.cross }}
        run: |
          gradbench repo build-tool --platform linux/amd64,linux/arm64 ${{ matrix.tool }}
          docker save --output tool-${{ matrix.tool }}.tar ghcr.io/gradbench/tool-${{ matrix.tool }}
      - name: Download x86-only Docker image as a fallback
        if: ${{ !matrix.cross }}
        uses: actions/download-artifact@v4
        with:
          name: x86-tool-${{ matrix.tool }}
      - name: Upload tool Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: tool-${{ matrix.tool }}
          path: tool-${{ matrix.tool }}.tar
