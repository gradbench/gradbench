name: Build
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  cli:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: cargo run

  site:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: npm ci
      - run: npm run --workspace=gradbench lint
      - run: npm run --workspace=gradbench build
      - uses: actions/upload-pages-artifact@v3
        with:
          path: packages/gradbench/dist

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: site
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    runs-on: ubuntu-22.04
    steps:
      - id: deploy
        uses: actions/deploy-pages@v4

  matrix:
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: matrix
        run: echo "matrix=$(.github/matrix.py)" | tee -a "$GITHUB_OUTPUT"

  docker:
    needs: matrix
    strategy:
      matrix: ${{ fromJSON(needs.matrix.outputs.matrix) }}
    runs-on: ubuntu-22.04
    steps:
      - uses: easimon/maximize-build-space@v10
        with:
          remove-dotnet: "true"
      - uses: actions/checkout@v4
      - uses: crazy-max/ghaction-setup-docker@v3
        with:
          daemon-config: |
            {
              "features": {
                "containerd-snapshotter": true
              }
            }
      - uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64
      - run: ./cross.sh ${{ matrix.tool }}
      - run: docker image save --output gradbench-${{ matrix.tool }}.tar ghcr.io/gradbench/${{ matrix.tool }}
      - uses: actions/upload-artifact@v4
        with:
          name: gradbench-${{ matrix.tool }}
          path: gradbench-${{ matrix.tool }}.tar
      - run: ./run.sh ${{ matrix.tool }}
