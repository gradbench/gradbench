name: Build
on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install Python dependencies
        run: poetry install
      - name: Install Node dependencies
        run: npm ci
      - name: Update Markdown tables of contents
        run: npm run toc
      - name: Check if that changed anything
        run: |
          CHANGES=$(git status --porcelain)
          echo "$CHANGES"
          git diff
          [ -z "$CHANGES" ]
      - name: Check Python formatting
        run: poetry run black --check .
      - name: Check Python imports
        run: poetry run isort --check .

  site:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node dependencies
        run: npm ci
      - name: Lint website
        run: npm run --workspace=gradbench lint
      - name: Build website
        run: npm run --workspace=gradbench build
      - name: Upload website artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: packages/gradbench/dist

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: site
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    runs-on: ubuntu-22.04
    steps:
      - name: Deploy website
        id: deploy
        uses: actions/deploy-pages@v4

  matrix:
    runs-on: ubuntu-22.04
    outputs:
      eval: ${{ steps.matrix.outputs.eval }}
      fast: ${{ steps.matrix.outputs.fast }}
      slow: ${{ steps.matrix.outputs.slow }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Compute job parameters
        id: matrix
        run: .github/matrix.py | tee -a "$GITHUB_OUTPUT"

  eval:
    needs: matrix
    strategy:
      fail-fast: false
      matrix:
        eval: ${{ fromJSON(needs.matrix.outputs.eval) }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup multi-platform Docker
        uses: ./.github/actions/docker
      - name: Build eval Docker image
        run: ./crosseval.sh ${{ matrix.eval }}
      - name: Serialize eval Docker image
        run: docker save --output eval-${{ matrix.eval }}.tar ghcr.io/gradbench/eval-${{ matrix.eval }}
      - name: Upload eval Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: eval-${{ matrix.eval }}
          path: eval-${{ matrix.eval }}.tar

  tool-fast:
    needs: matrix
    strategy:
      fail-fast: false
      matrix:
        tool: ${{ fromJSON(needs.matrix.outputs.fast) }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Increase disk space
        uses: ./.github/actions/space
      - name: Setup multi-platform Docker
        uses: ./.github/actions/docker
      - name: Build tool Docker image
        run: ./crosstool.sh ${{ matrix.tool }}
      - name: Serialize tool Docker image
        run: docker save --output tool-${{ matrix.tool }}.tar ghcr.io/gradbench/tool-${{ matrix.tool }}
      - name: Upload tool Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: tool-${{ matrix.tool }}
          path: tool-${{ matrix.tool }}.tar

  tool-slow:
    needs: matrix
    strategy:
      fail-fast: false
      matrix:
        tool: ${{ fromJSON(needs.matrix.outputs.slow) }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Increase disk space
        uses: ./.github/actions/space
      - name: Setup multi-platform Docker
        uses: ./.github/actions/docker
      - name: Build tool Docker image
        run: ./crosstool.sh ${{ matrix.tool }}
      - name: Serialize tool Docker image
        run: docker save --output tool-${{ matrix.tool }}.tar ghcr.io/gradbench/tool-${{ matrix.tool }}
      - name: Upload tool Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: tool-${{ matrix.tool }}
          path: tool-${{ matrix.tool }}.tar

  run-fast:
    needs:
      - matrix
      - eval
      - tool-fast
    strategy:
      fail-fast: false
      matrix:
        eval: ${{ fromJSON(needs.matrix.outputs.eval) }}
        tool: ${{ fromJSON(needs.matrix.outputs.fast) }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download eval Docker image from artifact
        uses: actions/download-artifact@v4
        with:
          name: eval-${{ matrix.eval }}
      - name: Download tool Docker image from artifact
        uses: actions/download-artifact@v4
        with:
          name: tool-${{ matrix.tool }}
      - name: Load eval Docker image
        run: docker load --input eval-${{ matrix.eval }}.tar
      - name: Load tool Docker image
        run: docker load --input tool-${{ matrix.tool }}.tar
      - name: Run tool on eval
        run: |
          set -o pipefail
          ./run-pretty.py --eval './eval.sh ${{ matrix.eval }}' --tool './tool.sh ${{ matrix.tool }}' --run-pretty log.json
      - name: Upload log as artifact
        uses: actions/upload-artifact@v4
        with:
          name: run-${{ matrix.eval }}-${{ matrix.tool }}
          path: log.json
      - name: Check for errors
        run: .github/errors.py

  run-slow:
    needs:
      - matrix
      - eval
      - tool-slow
    strategy:
      fail-fast: false
      matrix:
        eval: ${{ fromJSON(needs.matrix.outputs.eval) }}
        tool: ${{ fromJSON(needs.matrix.outputs.slow) }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download eval Docker image from artifact
        uses: actions/download-artifact@v4
        with:
          name: eval-${{ matrix.eval }}
      - name: Download tool Docker image from artifact
        uses: actions/download-artifact@v4
        with:
          name: tool-${{ matrix.tool }}
      - name: Load eval Docker image
        run: docker load --input eval-${{ matrix.eval }}.tar
      - name: Load tool Docker image
        run: docker load --input tool-${{ matrix.tool }}.tar
      - name: Run tool on eval
        run: |
          set -o pipefail
          ./run-pretty.py --eval './eval.sh ${{ matrix.eval }}' --tool './tool.sh ${{ matrix.tool }}' --json log.json
      - name: Upload log as artifact
        uses: actions/upload-artifact@v4
        with:
          name: run-${{ matrix.eval }}-${{ matrix.tool }}
          path: log.json
      - name: Check for errors
        run: .github/errors.py
